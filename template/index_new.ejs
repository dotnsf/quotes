<html>
<head>
  <meta charset="utf8"/>
  <title><%= settings.appname %></title>
  <script type="text/javascript" src="//code.jquery.com/jquery-2.0.3.min.js"></script>
  <link href="//maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css" rel="stylesheet"/>
  <script src="//maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js"></script>
  <script src="/js/cvi_busy_lib.js"></script>
  <script src="/js/common.js"></script>
  <script>
  var doc_category = '';
  //var doc_q = '';
  var doc_page = 0;

  var doc_limit = <%= settings.doc_limit %>;         //. 学習データ一覧の一画面に表示する学習データレコード数
  var max_target_nums = <%= settings.max_target_nums %>;   //. 課題に対する目標を最大いくつ調べるか？

  $(function(){
    getDocuments();
    trainingStatus();

    $( '#file3' ).on( 'change', function(){
      var input = $(this);
      var numFiles = input.get(0).files ? input.get(0).files.length : 1;
      var label = input.val().replace( /\\/g, '/' ).replace( /.*\//, '' );
      input.parent().next( ':text' ).val( label );
      $('#uploadTSVbtn').prop( 'disabled', ( label == '' ) );
    });

    $( '#resetdata' ).on( 'change', function(){
      var checked = $(this).prop( 'checked' );
      if( checked ){
        window.alert( 'このチェックボックスを ON にしたままロードすると、現在のデータベースの内容はリセットされ、指定された学習ファイルの中身だけが記録されます。注意してください。' );
      }
    });

    $( '#textForm').submit( function(){
      var text = $('#text').val();
      if( text ){
        classify( text );
      }
      return false;
    });

    $( '#myModal').on( 'hidden.bs.modal', function(){
      $('.li_selected').each( function( index, element ){
        var text = $(element).text();
        var tmp = $(element).prop( 'id' ).split( '_' );  //. 'li_address_G01_0_1' から 'address_G01' 部分を抜き出す
        //console.log( tmp );
        if( tmp.length > 4 ){
          var _id = tmp[1] + '_' + tmp[2];

          $('#_table_'+_id).append( '<li>' + text + '</li>' );
        }
      });
    });
  });

  function getDocuments(){
    $('#documents_table_tbody').html( '' );
    $('#documents_nav').html( '' );
    var obj = getBusyOverlay( 'viewport', {color:'black', opacity:0.5, text:'loading', style:'text-decoration:blink; font-weight:bold; font-size:12px; color:white;' } );
    $.ajax({
      type: 'GET',
      url: '/documents?limit=' + doc_limit + '&offset=' + ( doc_limit * doc_page ) + ( doc_category ? '&category=' + doc_category : '' ),
      success: function( result ){
        obj.remove();
        //console.log( result );
        if( result.status ){
          var total = result.total;
          var limit = result.limit;
          var offset = result.offset;
          var documents = result.docs;
          documents.forEach( function( doc ){
            //console.log( doc );  //. { _id: '_id', _rev: '_rev', timestamp: NN, task: 'xxx', target: 'yyy', category: 'zzz', .. }

            var tr = '<tr>'
              + '<td><input class="form-control ddoc" type="checkbox" id="doc_' + doc._id + '_' + doc._rev + '"/></td>'
              + '<td>' + doc.quote + '</td>'
              + '<td>' + doc.category + '</td>'
              + '<td>' + doc.subcategory + '</td>'
              + '<td>' + timestamp2datetime( doc.timestamp ) + '</td>'
              + '</tr>';
            $('#documents_table_tbody').append( tr );
          });

          //. Navigation
          if( total > 0 ){
            var start = ( offset + 1 );
            var end = ( ( offset + limit ) > total ? total : ( offset + limit ) );

            var table = '<table class="table">'
              + '<tr>'
              + '<td style="text-align:left;" id="document_prev">&lt;&lt;</td>'
              + '<td style="text-align:center;">' + ( offset + 1 ) + ( start < end ? ( ' - ' + end ) : '' ) + ' / ' + total + '</td>'
              + '<td style="text-align:right;" id="document_next">&gt;&gt;</td>'
              + '</tr>'
              + '</table>';
            $('#documents_nav').append( table );
            enablePrev( ( doc_page > 0 ) );
            enableNext( ( documents.length == doc_limit ) );
          }
        }
      },
      error: function( err ){
        obj.remove();
        console.log( err );
      }
    });
  }

  function enablePrev( b ){
    if( b ){
      $('#document_prev').css( 'color', '#008' );
      $('#document_prev').css( 'cursor', 'pointer' );
      $('#document_prev').click( function(){
        doc_page --;
        getDocuments();
      });
    }else{
      $('#document_prev').css( 'color', '#ccc' );
      $('#document_prev').css( 'cursor', 'default' );
      $('#document_prev').click( function(){
      });
    }
  }

  function enableNext( b ){
    if( b ){
      $('#document_next').css( 'color', '#008' );
      $('#document_next').css( 'cursor', 'pointer' );
      $('#document_next').click( function(){
        doc_page ++;
        getDocuments();
      });
    }else{
      $('#document_next').css( 'color', '#ccc' );
      $('#document_next').css( 'cursor', 'default' );
      $('#document_next').click( function(){
      });
    }
  }

  function uploadTSV(){
    var resetdata = $('#resetdata').prop( 'checked' );
    var form = $('#frm3').get()[0];
    var data = new FormData( form );
    if( resetdata ){
      data.resetdata = 1;
    }else{
      data.resetdata = 0;
    }
    console.log( data );
    var obj = getBusyOverlay( 'viewport', {color:'black', opacity:0.5, text:'loading', style:'text-decoration:blink; font-weight:bold; font-size:12px; color:white;' } );
    $.ajax({
      type: 'POST',
      url: '/uploadTSV',
      data: data,
      processData: false,
      contentType: false,
      dataType: 'json',
      success: function( data ){
        obj.remove();
        //console.log( data );
        getDocuments();
      },
      error: function( jqXHR, textStatus, errorThrown ){
        obj.remove();
        console.log( 'uploadTSV: error' );
        console.log( textStatus );
        console.log( errorThrown );
      }
    });

    return false;
  }


  function deleteSelected(){
    if( window.confirm( '選択したデータを削除します。よろしいですか？' ) ){
      var docs = [];
      $('input.ddoc:checked').each( function(){
        var id = $(this).prop( 'id' );
        var tmp = id.split( '_' );
        if( tmp.length == 3 ){
          var _id = tmp[1];
          var _rev = tmp[2];
          var doc = { _id: _id, _rev: _rev };
          docs.push( doc );
        }
      });

      //console.log( docs );
      if( docs && docs.length ){
        var obj = getBusyOverlay( 'viewport', {color:'black', opacity:0.5, text:'loading', style:'text-decoration:blink; font-weight:bold; font-size:12px; color:white;' } );
        $.ajax({
          type: 'DELETE',
          url: '/documents',
          data: { docs: docs },
          success: function( data ){
            obj.remove();
            //console.log( data );
            getDocuments();
          },
          error: function( jqXHR, textStatus, errorThrown ){
            obj.remove();
            console.log( textStatus );
            console.log( errorThrown );
          }
        });
      }
    }
  }

  function training(){
    if( window.confirm( '現在のデータを使って学習データを更新します。よろしいですか？' ) ){
      var obj = getBusyOverlay( 'viewport', {color:'black', opacity:0.5, text:'loading', style:'text-decoration:blink; font-weight:bold; font-size:12px; color:white;' } );
      $.ajax({
        type: 'POST',
        url: '/trainingNLC',
        success: function( data ){
          obj.remove();
          console.log( data );
          trainingStatus();
        },
        error: function( jqXHR, textStatus, errorThrown ){
          obj.remove();
          console.log( textStatus );
          console.log( errorThrown );
        }
      });
    }
  }

  function trainingStatus(){
    $('#nlc_status').html( '<input type="button" id="status_button" class="btn" value="学習ステータス確認中.." onClick="trainingStatus();"/>' );
    $('#assessment_div').css( "display", "none" );
    var obj = getBusyOverlay( 'viewport', {color:'black', opacity:0.5, text:'loading', style:'text-decoration:blink; font-weight:bold; font-size:12px; color:white;' } );
    $.ajax({
      type: 'GET',
      url: '/trainingNLC',
      success: function( data ){
        obj.remove();
        //console.log( data );
        if( data.status ){
          //console.log( data.body ); //. { classifier_id: "classifier_id", created: "created", status: "Training", .. }
          var status_message = '&nbsp;<input type="button" class="btn btn-info" value="学習ステータス確認" onClick="trainingStatus();"/>';
          var status_message1 = data.body1.status;
          var status_message2 = data.body2.status;
          if( status_message1 == 'Available' && status_message2 == 'Available' ){
            $('#status_button').addClass( "btn-success" );
            $('#status_button').val( "問い合わせ可能" );
            //$('#status_button').css( "display", "none" );
            $('#assessment_div').css( "display", "block" );
          }else if( status_message1 == 'Available' || status_message2 == 'Available' ){
            $('#status_button').addClass( "btn-info" );
            $('#status_button').val( "学習中..." );
          }else{
            $('#status_button').addClass( "btn-warning" );
            $('#status_button').val( "学習中.." );
          }
        }else{
          $('#status_button').addClass( "btn-danger" );
          $('#status_button').val( "学習記録なし" );
        }
      },
      error: function( jqXHR, textStatus, errorThrown ){
        obj.remove();
        console.log( textStatus );
        console.log( errorThrown );

        $('#status_button').addClass( "btn-danger" );
        $('#status_button').val( "学習記録なし" );
      }
    });
  }

  function classify( text ){
    $('#quote_list').html( '' );
    $('#class_name').html( '' );

    if( text ){
      $('#myModalLabel').html( text );

      var obj = getBusyOverlay( 'viewport', {color:'black', opacity:0.5, text:'loading', style:'text-decoration:blink; font-weight:bold; font-size:12px; color:white;' } );
      $.ajax({
        type: 'POST',
        url: '/classify',
        data: { text: text },
        success: function( data ){
          obj.remove();
          if( data.status ){
            console.log( 'POST /classify' );
            //console.log( data.classes );  //. [ { class_name: 'class_name', confidence: 0.98 }, { .. }, .. ]
            if( data.classes.length > 0 ){
              var quote_texts = [];
              data.classes.forEach( function( top ){
                var top_class_name = top.class_name;  //. 'category'
                var top_confidence = top.confidence;  //. 0.9814..

                if( top_confidence > 0 ){
                  //. text と似た課題を探し、同一カテゴリであれば候補とする
                  $.ajax({
                    type: 'POST',
                    url: '/classify',
                    data: { text: text, idx: '2' },
                    success: function( data2 ){
                      //obj.remove();
                      if( data2.status ){
                        //console.log( data2.classes );  //. [ { class_name: 'class_name', confidence: 0.98 }, { .. }, .. ]
                        if( data2.classes.length > 0 ){
                          if( max_target_nums > 0 && data2.classes.length > max_target_nums ){
                            data2.classes = data2.classes.slice( 0, max_target_nums );
                          }

                          data2.classes.forEach( function( top2 ){
                            var top2_class_name = top2.class_name;  //. 'subcategory'
                            var top2_confidence = top2.confidence;  //. 0.9814..

                            $.ajax({
                              type: 'GET',
                              url: '/query?category=' + top_class_name + '&subcategory=' + top2_class_name,
                              success: function( data3 ){
                                if( data3 && data3.docs && data3.docs.length ){
                                  data3.docs.forEach( function( t ){
                                    console.log( t );

                                    var quote = t.quote;
                                    var _quote = sanitizeForPattern2( quote );

                                    var _li = '<li class="quote-list-item list-group-item"><a class="nounderline tooltip-test" href="#" title="' + top2_confidence + '">' + _quote + '</a></li>';
                                    //$('#quote_list').append( _li );

                                    //. confidence 順にソート
                                    var b = true;
                                    var lis = $('#quote_list')[0].childNodes;
                                    for( var l = 0; l < lis.length && b; l ++ ){
                                      var li = lis[l];
                                      var li_a = li.childNodes[0];
                                      var attrs = li_a.attributes;
                                      var li_a_title = attrs.getNamedItem( 'title' );
                                      if( li_a_title ){
                                        var cf = parseFloat( li_a_title.nodeValue );
                                        //console.log( 'cf = ' + cf );
                                        if( cf < top2_confidence ){
                                          $(li).before( _li );
                                          b = false;
                                        }
                                      }
                                    }
                                    if( b ){
                                      $('#quote_list').append( _li );
                                    }

                                    quote_texts.push( _quote );
                                  });
                                }
                              },
                              error: function( jqXHR, textStatus, errorThrown ){
                                //console.log( textStatus );
                                //console.log( errorThrown );
                              }
                            });
                          });
                        }
                      }
                    },
                    error: function( jqXHR, textStatus, errorThrown ){
                      obj.remove();
                      console.log( textStatus );
                      console.log( errorThrown );
                    }
                  });
                }
              });
            }
          }
        },
        error: function( jqXHR, textStatus, errorThrown ){
          obj.remove();
          console.log( textStatus );
          console.log( errorThrown );
        }
      });

      $('#myModal').modal( 'show' );
    }else{
      //. 希望未入力
    }
  }

  function timestamp2datetime( ts ){
    var dt = new Date( ts );
    var yyyy = dt.getFullYear();
    var mm = dt.getMonth() + 1;
    var dd = dt.getDate();
    var hh = dt.getHours();
    var nn = dt.getMinutes();
    var ss = dt.getSeconds();
    //var datetime = yyyy + '-' + ( mm < 10 ? '0' : '' ) + mm + '-' + ( dd < 10 ? '0' : '' ) + dd
    //  + ' ' + ( hh < 10 ? '0' : '' ) + hh + ':' + ( nn < 10 ? '0' : '' ) + nn + ':' + ( ss < 10 ? '0' : '' ) + ss;
    var datetime = yyyy + '年' + ( mm < 10 ? '0' : '' ) + mm + '月' + ( dd < 10 ? '0' : '' ) + dd + '日';
    return datetime;
  }

  function sanitizeForPattern2( body ){
    body = body.split( '、' ).join( '' );
    body = body.split( '。' ).join( '' );

    return body;
  }
  </script>
  <style>
  a.nounderline{
    color: #000;
    text-decoration: none;
  }
  .li_selected{
    background-color: #fcc;
  }
  </style>
  </head>
  <body>
  <nav class="navbar navbar-expand-lg navbar-light index-header">
    <a href="/" class="navbar-brand"><%= settings.appname %></a>
    <div class="collapse navbar-collapse target">
      <ul class="navbar-nav mr-auto">
      </ul>
      <ul class="navbar-nav" id="navbar">
        <li class="nav-item" id="nlc_status">
          <input type="button" class="btn btn-info" value="学習ステータス確認" onClick="trainingStatus();"/>
        </li>
      </ul>
    </div>
  </nav>

  <div class="container p-3">
    <ul class="nav nav-tabs">
      <li class="nav-item"><a href="#tab1" class="nav-link active" data-toggle="tab">診断</a></li>
      <li class="nav-item"><a href="#tab2" class="nav-link" data-toggle="tab">学習データ管理</a></li>
    </ul>

    <div class="tab-content">
      <div id="tab1" class="tab-pane active">
        <div style="margin: 20px;">
          <form id="textForm">
          <input type="text" class="form-control" placeholder="悩み、、" id="text"/>
          </form>
        </div>
      </div>
      <div id="tab2" class="tab-pane">
        <table class="table">
          <tr>
            <td style="text-align:left;">
              <form id="frm3" name="frm3" enctype="multipart/mixed">
                <label>
                  <span class="btn btn-primary">学習データファイル<input type="file" id="file3" name="file" style="display:none;"/></span>
                  <input type="text" style="background:#ccc; width:200px;" readonly=""/>
<!--
                  <input type="checkbox" id="resetdata" value="1"/>現在のデータを全て削除してからインポートする
-->
                </label>
              </form>
            </td>
            <td style="text-align:right;">
              <input id="uploadTSVbtn" type="button" class="btn btn-info" value="学習データ送信" onClick="uploadTSV();" disabled=""/>
            </td>
          </tr>
        </table>

        <div class="container" id="documents_table" style="padding:20px 0; font-size:8px;">
          <table class="table table-bordered table-striped">
            <thead>
              <tr><th>#</th><th>名言</th><th>大分類</th><th>小分類</th><th>データ作成日時</th></tr>
            </thead>
            <tbody id="documents_table_tbody">
            </tbody>
          </table>
          <div id="documents_nav"></div>
          <form>
            <input type="button" class="btn btn-warning" value="選択したデータを削除" onClick="deleteSelected();"/>
            <!--
            <input type="button" class="btn btn-success" value="再学習" onClick="training();"/>
          -->
            <button class="btn btn-default" onClick="training();">再学習<img src="/imgs/watson.png" width="24" height="24"/></button>
          </form>
        </div>
      </div>
    </div>
  </div>


  <div class="modal bd-example-modal-lg fade" id="myModal" tabindex="-1" role="dialog" aria-labbelledby="myModal" aria-hidden="true">
    <div class="modal-dialog modal-lg">
      <div class="modal-content">
        <div class="modal-header">
          <h4 class="modal-title" id="myModalLabel">問い合わせ結果</h4>
          <button type="button" class="close" data-dismiss="modal" aria-label="Close">
            <span aria-hidden="true">&times;</span>
          </button>
        </div>
        <div class="modal-body">
          <h5 style="text-align: center;" id="class_name"></h5>
          <ul id="quote_list" class="list-group">
          </ul>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
        </div>
      </div>
    </div>
  </div>

</body>
</html>
